import { Credentials, AssumeRoleCommandInput } from '@aws-sdk/client-sts';
import { Command, flags } from '@oclif/command';
export default class InitApp extends Command {
    static description: string;
    static examples: string[];
    static flags: {
        help: import("@oclif/parser/lib/flags").IBooleanFlag<void>;
        name: flags.IOptionFlag<string | undefined>;
        profile: flags.IOptionFlag<string | undefined>;
        api: flags.IOptionFlag<string | undefined>;
        debug: import("@oclif/parser/lib/flags").IBooleanFlag<boolean>;
    };
    static args: never[];
    trace: boolean;
    authenticated(exit_on_not?: boolean): any;
    assumeRoleForCredentials(sourceCreds: Credentials, params: AssumeRoleCommandInput): Promise<Credentials>;
    bootstrapped(profile?: string): Promise<{
        roleArn: string;
        bucketName: string;
        stackName: string;
    } | undefined>;
    run(): Promise<void>;
}
